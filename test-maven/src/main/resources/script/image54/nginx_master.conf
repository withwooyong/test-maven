
user  manager;
worker_processes  4;

pid        logs/nginx_master.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';    

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    proxy_cache_path /home/manager/server/nginx-images-cache/ levels=1:2 keys_zone=images:100m inactive=24h max_size=1g;

    server {
        listen       80;
        server_name  localhost;

        charset UTF-8;

        #access_log  logs/host.access.log  main;

        location ~ .html {
            root /home/manager/server/app;
            index index.html index.htm;
        }

        location = /favicon.ico {
            return 204;
            access_log     off;
            log_not_found  off;
        }
        
        # Public-facing cache server.
        # Only serve widths of 768 or 1920 so we can cache effectively.
        location ~ "^/media/(?<width>(100|200|300|400|500|768|1920))/(?<image>.+)$" {
            # Proxy to internal image resizing server.
            proxy_pass http://localhost:8888/media/$width/$image;
            proxy_cache images;
            proxy_cache_valid 200 24h;
        }

        location /media {
            # Nginx needs you to manually define DNS resolution when using
            # variables in proxy_pass. Creating this dummy location avoids that.
            # The error is: "no resolver defined to resolve localhost".
            proxy_pass http://localhost:8888/;
        } 

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }        
    }
}